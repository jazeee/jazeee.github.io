{"version":3,"sources":["webpack:///./src/pages/software-projects/all-github-projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/link.js","webpack:///./src/components/seo.js","webpack:///./src/styles/theme.js","webpack:///./src/components/hide-on-scroll.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/github-icon.js","webpack:///./src/components/projects/github-project.js"],"names":["AllGithubProjects","_useState","useState","projects","setProjects","_useState2","page","setPage","_useState3","isLoading","setIsLoading","useEffect","isCurrentRequest","_ref","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","mark","_callee","response","githubData","_projects","wrap","_context","prev","next","fetch","sent","ok","json","map","datum","name","description","full_name","url","html_url","githubFullName","stop","apply","this","arguments","getProjects","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_8__","className","styles","header","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_13__","project","_components_projects_github_project__WEBPACK_IMPORTED_MODULE_11__","key","actions","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_9__","variant","disabled","onClick","length","_components_link__WEBPACK_IMPORTED_MODULE_12__","to","AllGithubProjectsPage","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","m","module","exports","require","default","Link","React","forwardRef","props","ref","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_2__","Object","assign","component","GatsbyLink","SEO","lang","meta","site","_public_static_d_629570140_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","keywords","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","HideOnScroll","children","trigger","useScrollTrigger","react_default","Slide","appear","direction","in","node","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","Header","siteTitle","classes","AppBar","Toolbar","IconButton","edge","color","aria-label","Menu_default","Typography","components_link","Button","Layout","_856328897","Fragment","CssBaseline","MuiThemeProvider","header_Header","Date","getFullYear","href","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","shape","pathname","GitHubIcon","SvgIcon","GithubProject","summary","codeLink","target","rel","githubIcon"],"mappings":"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","file":"component---src-pages-software-projects-all-github-projects-js-b8c133bace9f4f757c92.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Layout } from \"../../components/layout\";\nimport { SEO } from \"../../components/seo\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./software-projects.module.css\";\nimport { GithubProject } from \"../../components/projects/github-project\";\nimport { Link } from \"../../components/link\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const AllGithubProjects = () => {\n  const [projects, setProjects] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    let isCurrentRequest = true;\n    const getProjects = async () => {\n      setIsLoading(true);\n      const response = await fetch(\n        `https://api.github.com/users/jazeee/repos?sort=updated&page=${page}`\n      );\n      if (response.ok) {\n        const githubData = await response.json();\n        if (isCurrentRequest) {\n          const projects = githubData.map(datum => {\n            const { name, description, full_name, html_url } = datum;\n            return {\n              name,\n              description: description || \"-\",\n              url: html_url,\n              githubFullName: full_name,\n            };\n          });\n          setProjects(projects);\n          setIsLoading(false);\n        }\n      }\n    };\n    getProjects();\n    return () => (isCurrentRequest = false);\n  }, [setProjects, setIsLoading, page]);\n  return (\n    <Container className={styles.projects}>\n      <h1 className={styles.header}>All Github Projects</h1>\n      {isLoading && <CircularProgress />}\n      {projects.map(project => {\n        return <GithubProject key={project.name} project={project} />;\n      })}\n      <Container className={styles.actions}>\n        <Button\n          variant=\"contained\"\n          disabled={page <= 1}\n          onClick={() => setPage(page - 1)}\n        >\n          Previous Page\n        </Button>\n        <Button\n          variant=\"contained\"\n          disabled={projects.length !== 30}\n          onClick={() => setPage(page + 1)}\n        >\n          Next Page\n        </Button>\n        <Button>\n          <Link to=\"software-projects\">Featured Projects</Link>\n        </Button>\n      </Container>\n    </Container>\n  );\n};\n\nconst AllGithubProjectsPage = () => (\n  <Layout>\n    <SEO title=\"All Github Projects\" />\n    <AllGithubProjects />\n  </Layout>\n);\n\nexport default AllGithubProjectsPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport MuiLink from \"@material-ui/core/Link\"\nimport { Link as GatsbyLink } from \"gatsby\"\n\nexport const Link = React.forwardRef(function Link(props, ref) {\n  return <MuiLink component={GatsbyLink} ref={ref} {...props} />\n})\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nexport function SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            keywords\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: `keywords`,\n          content: site.siteMetadata.keywords,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  keywords: PropTypes.string,\n};\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2F2001\",\n    },\n    secondary: {\n      main: \"#0094FF\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#000\",\n    },\n  },\n});\n","import React from \"react\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport PropTypes from \"prop-types\";\n\nexport function HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"../components/link\";\n\nimport { HideOnScroll } from \"./hide-on-scroll\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport const Header = props => {\n  const { siteTitle } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <HideOnScroll>\n        <AppBar>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/\" color=\"inherit\">\n                {siteTitle}\n              </Link>\n            </Typography>\n            <Button color=\"inherit\">Login</Button>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n// import Container from \"@material-ui/core/Container\";\nimport { theme } from \"../styles/theme\";\nimport \"../styles/global.css\";\n\nimport { Header } from \"./header\";\n\nexport const Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <CssBaseline />\n      <MuiThemeProvider theme={theme}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>{children}</div>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </MuiThemeProvider>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/* eslint-disable max-len */\n\nimport React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport function GitHubIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  );\n}\n","import React from \"react\";\nimport styles from \"./github-project.module.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { GitHubIcon } from \"../github-icon\";\n\nexport const GithubProject = props => {\n  const { project } = props;\n  return (\n    <div className={styles.project}>\n      <Typography className={styles.summary}>\n        <Link color=\"secondary\" href={project.url}>\n          {project.name}\n        </Link>{\" \"}\n        - {project.description}\n      </Typography>\n      <Typography className={styles.codeLink}>\n        <Link\n          color=\"secondary\"\n          href={`https://github.com/${project.githubFullName}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GitHubIcon className={styles.githubIcon} />\n          Github\n        </Link>\n      </Typography>\n    </div>\n  );\n};\n"],"sourceRoot":""}